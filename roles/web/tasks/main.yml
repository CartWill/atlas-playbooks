---
- name: install system packages
  apt: pkg={{item}} state=present
  with_items: system_packages
- name: install virtualenv
  pip: name=virtualenv
- name: create srv dir
  file: dest={{atlas_prefix}} owner={{atlas_webuser}} group={{atlas_webuser}} state=directory recurse=yes
- name: create log dir
  file: dest=/var/log/django/ owner={{atlas_webuser}} group={{atlas_webuser}} state=directory recurse=yes
- name: get code
  git: repo=https://github.com/cid-harvard/atlas-economic-complexity.git
       dest={{atlas_prefix}}
       version=master

- name: install atlas python requirements
  pip: requirements={{atlas_prefix}}/requirements.txt virtualenv={{atlas_prefix}}/env/

- name: generate django settings
  template: src=settings_local.py dest={{atlas_prefix}}/django_files/atlas/ owner={{atlas_webuser}}

- name: install PT Sans Narrow for static image rendering
  copy: src=PTN57F.ttf owner={{atlas_webuser}} dest=/home/{{atlas_webuser}}/.fonts/

- name: Remove existing nginx config
  file: path=/etc/nginx/sites-enabled/default state=absent

- name: copy in nginx site config file
  template: src=nginx.{{atlas_environment}} dest=/etc/nginx/sites-enabled/{{atlas_environment}}

- name: copy in nginx main config files
  template: src=nginx.conf.{{atlas_environment}} dest=/etc/nginx/nginx.conf

- name: add user for celery
  user: name=celery shell=/bin/false createhome=no system=yes

- name: make log directory for celery
  file: owner=celery recurse=yes dest=/var/log/celery/ state=directory

- name: copy in celery config file
  template: src=celeryconfig.py dest={{atlas_prefix}}/django_files/atlas/ owner={{atlas_webuser}}

- name: add dir for images
  file: owner={{atlas_webuser}} mode=0777 dest=/var/db/images/ recurse=yes state=directory

# TODO: this file has owner "vagrant" but in prod it should have celery or www-data
- name: add temp dir for celery task intermediate data
  file: owner={{atlas_webuser}} group=www-data mode=0777 dest=/tmp/ramdisk/ recurse=yes state=directory

- name: copy in uwsgi config
  template: owner={{atlas_webuser}} src=atlas.uwsgi.ini dest=/etc/uwsgi/apps-enabled/atlas.ini

- name: copy in supervisor config
  template: owner={{atlas_webuser}} src=supervisor.atlas.conf dest=/etc/supervisor/conf.d/atlas.conf

- name: run compression
  django_manage: >
    command=compress
    app_path={{atlas_prefix}}/django_files/
    virtualenv={{atlas_prefix}}/env/
  when: atlas_environment == 'prod'

#- name: npm globally install bower
#  npm: name=bower global=yes production={{atlas_environment == 'prod'}}
#
#- name: npm
#  npm: path={{atlas_prefix}} production={{atlas_environment == 'prod'}}

- name: reload nginx service
  service: name=nginx state=reloaded

- name: reload uwsgi
  supervisorctl: name=uwsgi state=restarted
  when: atlas_environment == 'prod'

- name: reload celery
  supervisorctl: name=celery state=restarted
