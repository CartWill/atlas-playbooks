---
- name: install system packages
  apt: pkg={{item}} state=present
  with_items: system_packages
- name: install virtualenv
  pip: name=virtualenv
- name: create srv dir
  file: dest={{atlas_prefix}} owner={{atlas_webuser}} group={{atlas_webuser}} state=directory recurse=yes
- name: get code
  git: repo=https://github.com/cid-harvard/atlas-economic-complexity.git
       dest={{atlas_prefix}}
       version=beta

- name: install atlas python requirements
  pip: requirements={{atlas_prefix}}/requirements.txt virtualenv={{atlas_prefix}}/env/
- name: generate django settings
  template: src=settings_local.py dest={{atlas_prefix}}/django_files/atlas/
- name: Set permissions to django directory
  file: owner={{atlas_webuser}} recurse=yes dest={{atlas_prefix}}

- name: install PT Sans Narrow for static image rendering
  copy: src=PTN57F.ttf dest=/home/{{atlas_webuser}}/.fonts/

#- name: Remove existing nginx

- name: copy in nginx site config file
  template: src=nginx.{{atlas_environment}} dest=/etc/nginx/sites-enabled/{{atlas_environment}}

- name: copy in nginx main config files
  template: src=nginx.conf.{{atlas_environment}} dest=/etc/nginx/nginx.conf

- name: reload nginx service
  service: name=nginx state=reloaded

- name: add user for celery
  user: name=celery shell=/bin/false createhome=no system=yes

- name: make log directory for celery
  file: owner=celery recurse=yes dest=/var/log/celery/ state=directory

- name: add dir for images
  file: owner={{atlas_webuser}} mode=0777 dest=/var/db/images/ recurse=yes state=directory

# TODO: this file has owner "vagrant" but in prod it should have celery or www-data
- name: add temp dir for celery task intermediate data
  file: owner={{atlas_webuser}} group=www-data mode=0777 dest=/tmp/ramdisk/ recurse=yes state=directory


#TODO: Doing this via shell for now because django_manage doesn't let you pass
#a listen ip to runserver. Don't do this in production
#- name: Run server
#  django_manage: >
#      command=runserver
#      app_path={{prefix}}/django_files/
#      virtualenv={{prefix}}/env/

#- name: run django server
#  shell: ls; {{prefix}}/env/bin/python {{prefix}}/django_files/manage.py runserver --pythonpath={{prefix}}/django_files/ 0.0.0.0:8000
